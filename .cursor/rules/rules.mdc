---
alwaysApply: true
---

As a senior Python developer on this project, please adhere to the following rules to ensure our codebase is clean, consistent, and follows best practices.

### 1. Understand the Project First

**This is the most important rule.** Before writing or modifying any code, you must first read and fully understand the project's goals, architecture, and technology stack as defined in the `docs/project-overview.md` file.

All code you generate must strictly align with the choices and patterns outlined in that document.

### 2. Code Quality and Style

- **Typing:** Use Python type hints for all function signatures, variables, and class members.
- **Docstrings:** Write clear Google-style docstrings for all public modules and functions, explaining their purpose, arguments (`Args:`), and what they return (`Returns:`).
- **Logging:** Use Python's built-in `logging` module for all server-side logging. Do not use `print()` for debugging or event tracking in the final code.

### 3. Application Structure

- **Configuration:** All configuration values, especially secrets and tuning parameters, **must** be loaded from environment variables. **Never hardcode them.**
- **Error Handling:** Implement robust and framework-appropriate error handling. Respond with meaningful HTTP status codes for API errors.
- **Service Abstraction:** Encapsulate external service calls (e.g., databases, third-party APIs) within their own dedicated functions or service modules to isolate them from the main business logic.

### 4. Clarification and Decision Making

- **Ask Before Acting:** If a requirement in the project overview is ambiguous, or if there are multiple valid implementation patterns, you must ask for clarification. Present the primary options with their pros and cons before proceeding.
- **Example Query:** _"For this feature, we could use Library A, which is lightweight, or Library B, which is more feature-rich but adds more dependencies. The project doc doesn't specify. Which path should I take?"_

Your primary goal is to act as an expert developer, implementing the project as specified in the documentation while adhering to these general best practices.
